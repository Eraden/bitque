#![allow(unused_imports, dead_code)]

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `comments` table.
    ///
    /// (Automatically generated by Diesel.)
    comments (id) {
        /// The `id` column of the `comments` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `body` column of the `comments` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        body -> Text,
        /// The `user_id` column of the `comments` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        user_id -> Int4,
        /// The `issue_id` column of the `comments` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        issue_id -> Int4,
        /// The `created_at` column of the `comments` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `comments` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `invitations` table.
    ///
    /// (Automatically generated by Diesel.)
    invitations (id) {
        /// The `id` column of the `invitations` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `name` column of the `invitations` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        name -> Text,
        /// The `email` column of the `invitations` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        email -> Text,
        /// The `state` column of the `invitations` table.
        ///
        /// Its SQL type is `InvitationStateType`.
        ///
        /// (Automatically generated by Diesel.)
        state -> InvitationStateType,
        /// The `project_id` column of the `invitations` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        project_id -> Int4,
        /// The `invited_by_id` column of the `invitations` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        invited_by_id -> Int4,
        /// The `created_at` column of the `invitations` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `invitations` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
        /// The `bind_token` column of the `invitations` table.
        ///
        /// Its SQL type is `Uuid`.
        ///
        /// (Automatically generated by Diesel.)
        bind_token -> Uuid,
        /// The `role` column of the `invitations` table.
        ///
        /// Its SQL type is `UserRoleType`.
        ///
        /// (Automatically generated by Diesel.)
        role -> UserRoleType,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `issue_assignees` table.
    ///
    /// (Automatically generated by Diesel.)
    issue_assignees (id) {
        /// The `id` column of the `issue_assignees` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `issue_id` column of the `issue_assignees` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        issue_id -> Int4,
        /// The `user_id` column of the `issue_assignees` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        user_id -> Int4,
        /// The `created_at` column of the `issue_assignees` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `issue_assignees` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `issues` table.
    ///
    /// (Automatically generated by Diesel.)
    issues (id) {
        /// The `id` column of the `issues` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `title` column of the `issues` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        title -> Text,
        /// The `issue_type` column of the `issues` table.
        ///
        /// Its SQL type is `IssueTypeType`.
        ///
        /// (Automatically generated by Diesel.)
        issue_type -> IssueTypeType,
        /// The `priority` column of the `issues` table.
        ///
        /// Its SQL type is `IssuePriorityType`.
        ///
        /// (Automatically generated by Diesel.)
        priority -> IssuePriorityType,
        /// The `list_position` column of the `issues` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        list_position -> Int4,
        /// The `description` column of the `issues` table.
        ///
        /// Its SQL type is `Nullable<Text>`.
        ///
        /// (Automatically generated by Diesel.)
        description -> Nullable<Text>,
        /// The `description_text` column of the `issues` table.
        ///
        /// Its SQL type is `Nullable<Text>`.
        ///
        /// (Automatically generated by Diesel.)
        description_text -> Nullable<Text>,
        /// The `estimate` column of the `issues` table.
        ///
        /// Its SQL type is `Nullable<Int4>`.
        ///
        /// (Automatically generated by Diesel.)
        estimate -> Nullable<Int4>,
        /// The `time_spent` column of the `issues` table.
        ///
        /// Its SQL type is `Nullable<Int4>`.
        ///
        /// (Automatically generated by Diesel.)
        time_spent -> Nullable<Int4>,
        /// The `time_remaining` column of the `issues` table.
        ///
        /// Its SQL type is `Nullable<Int4>`.
        ///
        /// (Automatically generated by Diesel.)
        time_remaining -> Nullable<Int4>,
        /// The `reporter_id` column of the `issues` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        reporter_id -> Int4,
        /// The `project_id` column of the `issues` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        project_id -> Int4,
        /// The `created_at` column of the `issues` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `issues` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
        /// The `issue_status_id` column of the `issues` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        issue_status_id -> Int4,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `issue_statuses` table.
    ///
    /// (Automatically generated by Diesel.)
    issue_statuses (id) {
        /// The `id` column of the `issue_statuses` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `name` column of the `issue_statuses` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        name -> Varchar,
        /// The `position` column of the `issue_statuses` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        position -> Int4,
        /// The `project_id` column of the `issue_statuses` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        project_id -> Int4,
        /// The `created_at` column of the `issue_statuses` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `issue_statuses` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `messages` table.
    ///
    /// (Automatically generated by Diesel.)
    messages (id) {
        /// The `id` column of the `messages` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `receiver_id` column of the `messages` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        receiver_id -> Int4,
        /// The `sender_id` column of the `messages` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        sender_id -> Int4,
        /// The `summary` column of the `messages` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        summary -> Text,
        /// The `description` column of the `messages` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        description -> Text,
        /// The `message_type` column of the `messages` table.
        ///
        /// Its SQL type is `MessageTypeType`.
        ///
        /// (Automatically generated by Diesel.)
        message_type -> MessageTypeType,
        /// The `hyper_link` column of the `messages` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        hyper_link -> Text,
        /// The `created_at` column of the `messages` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `messages` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `projects` table.
    ///
    /// (Automatically generated by Diesel.)
    projects (id) {
        /// The `id` column of the `projects` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `name` column of the `projects` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        name -> Text,
        /// The `url` column of the `projects` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        url -> Text,
        /// The `description` column of the `projects` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        description -> Text,
        /// The `category` column of the `projects` table.
        ///
        /// Its SQL type is `ProjectCategoryType`.
        ///
        /// (Automatically generated by Diesel.)
        category -> ProjectCategoryType,
        /// The `created_at` column of the `projects` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `projects` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
        /// The `time_tracking` column of the `projects` table.
        ///
        /// Its SQL type is `TimeTrackingType`.
        ///
        /// (Automatically generated by Diesel.)
        time_tracking -> TimeTrackingType,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `tokens` table.
    ///
    /// (Automatically generated by Diesel.)
    tokens (id) {
        /// The `id` column of the `tokens` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `user_id` column of the `tokens` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        user_id -> Int4,
        /// The `access_token` column of the `tokens` table.
        ///
        /// Its SQL type is `Uuid`.
        ///
        /// (Automatically generated by Diesel.)
        access_token -> Uuid,
        /// The `refresh_token` column of the `tokens` table.
        ///
        /// Its SQL type is `Uuid`.
        ///
        /// (Automatically generated by Diesel.)
        refresh_token -> Uuid,
        /// The `created_at` column of the `tokens` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `tokens` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
        /// The `bind_token` column of the `tokens` table.
        ///
        /// Its SQL type is `Nullable<Uuid>`.
        ///
        /// (Automatically generated by Diesel.)
        bind_token -> Nullable<Uuid>,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `user_projects` table.
    ///
    /// (Automatically generated by Diesel.)
    user_projects (id) {
        /// The `id` column of the `user_projects` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `user_id` column of the `user_projects` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        user_id -> Int4,
        /// The `project_id` column of the `user_projects` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        project_id -> Int4,
        /// The `is_default` column of the `user_projects` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        is_default -> Bool,
        /// The `is_current` column of the `user_projects` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        is_current -> Bool,
        /// The `role` column of the `user_projects` table.
        ///
        /// Its SQL type is `UserRoleType`.
        ///
        /// (Automatically generated by Diesel.)
        role -> UserRoleType,
        /// The `created_at` column of the `user_projects` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `user_projects` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
    }
}

table! {
    use diesel::sql_types::*;
    use jirs_data::sql::*;

    /// Representation of the `users` table.
    ///
    /// (Automatically generated by Diesel.)
    users (id) {
        /// The `id` column of the `users` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `name` column of the `users` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        name -> Text,
        /// The `email` column of the `users` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        email -> Text,
        /// The `avatar_url` column of the `users` table.
        ///
        /// Its SQL type is `Nullable<Text>`.
        ///
        /// (Automatically generated by Diesel.)
        avatar_url -> Nullable<Text>,
        /// The `created_at` column of the `users` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        created_at -> Timestamp,
        /// The `updated_at` column of the `users` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        updated_at -> Timestamp,
    }
}

joinable!(comments -> issues (issue_id));
joinable!(comments -> users (user_id));
joinable!(invitations -> projects (project_id));
joinable!(invitations -> users (invited_by_id));
joinable!(issue_assignees -> issues (issue_id));
joinable!(issue_assignees -> users (user_id));
joinable!(issue_statuses -> projects (project_id));
joinable!(issues -> issue_statuses (issue_status_id));
joinable!(issues -> projects (project_id));
joinable!(issues -> users (reporter_id));
joinable!(tokens -> users (user_id));
joinable!(user_projects -> projects (project_id));
joinable!(user_projects -> users (user_id));

allow_tables_to_appear_in_same_query!(
    comments,
    invitations,
    issue_assignees,
    issues,
    issue_statuses,
    messages,
    projects,
    tokens,
    user_projects,
    users,
);
