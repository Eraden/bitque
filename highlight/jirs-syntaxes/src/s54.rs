
#![allow(unused_imports)]
#![allow(dead_code)]

use jirs_syntect::{*, parsing::*};
use lazycell::AtomicLazyCell;

#[inline(always)]
pub fn load() -> SyntaxReference {
        SyntaxReference {  name: "Objective-C++".to_string(),
  file_extensions: vec!["mm".to_string(),"M".to_string(),"h".to_string()],
  scope: Scope { a: 844665448300544, b: 0 },
  first_line_match: None,
  hidden: false,
  variables: {
    let mut v = std::collections::HashMap::new();
    v.insert("other_keywords".to_string(), "typedef|nullptr|{{visibility_modifiers}}|static_assert|sizeof|using|typeid|alignof|alignas|namespace|template".to_string());
    v.insert("basic_types".to_string(), "asm|__asm__|auto|bool|_Bool|char|_Complex|double|float|_Imaginary|int|long|short|signed|unsigned|void".to_string());
    v.insert("balance_parentheses".to_string(), "{{regular}}{{paren_open}}{{regular}}{{paren_close}}{{regular}}".to_string());
    v.insert("path_lookahead".to_string(), "(?:::\\s*)?(?:{{identifier}}\\s*::\\s*)*(?:template\\s+)?{{identifier}}".to_string());
    v.insert("compiler_directive".to_string(), "inline|restrict|__restrict__|__restrict".to_string());
    v.insert("control_keywords".to_string(), "break|case|catch|continue|default|do|else|for|goto|if|_Pragma|return|switch|throw|try|while".to_string());
    v.insert("macro_identifier".to_string(), "\\b[[:upper:]_][[:upper:][:digit:]_]{2,}\\b".to_string());
    v.insert("modifiers".to_string(), "{{storage_classes}}|{{type_qualifier}}|{{compiler_directive}}".to_string());
    v.insert("regular_plus".to_string(), "[^(){}&;*^%=<>-]+".to_string());
    v.insert("data_structures_forward_decl_lookahead".to_string(), "(\\s+{{macro_identifier}})*\\s*(:\\s*({{path_lookahead}}|{{visibility_modifiers}}|,|\\s|<[^;]*>)+)?;".to_string());
    v.insert("declspec".to_string(), "__declspec\\(\\s*\\w+(?:\\([^)]+\\))?\\s*\\)".to_string());
    v.insert("generic_close".to_string(), ">)?)?".to_string());
    v.insert("visibility_modifiers".to_string(), "private|protected|public".to_string());
    v.insert("paren_open".to_string(), "(?:\\(".to_string());
    v.insert("casts".to_string(), "const_cast|dynamic_cast|reinterpret_cast|static_cast".to_string());
    v.insert("operator_method_name".to_string(), "\\boperator\\s*(?:[-+*/%Ë†&|~!=<>]|[-+*/%^&|=!<>]=|<<=?|>>=?|&&|\\|\\||\\+\\+|--|,|->\\*?|\\(\\)|\\[\\]|\"\"\\s*{{identifier}})".to_string());
    v.insert("memory_operators".to_string(), "new|delete".to_string());
    v.insert("generic_lookahead".to_string(), "<{{generic_open}}{{generic_open}}{{regular}}{{generic_close}}\\s*{{generic_close}}{{balance_parentheses}}>".to_string());
    v.insert("identifier".to_string(), "\\b[[:alpha:]_][[:alnum:]_]*\\b".to_string());
    v.insert("non_angle_brackets".to_string(), "(?=<<|<=)".to_string());
    v.insert("non_func_keywords".to_string(), "if|for|switch|while|decltype|sizeof|__declspec|__attribute__|typeid|alignof|alignas|static_assert".to_string());
    v.insert("paren_close".to_string(), "\\))?".to_string());
    v.insert("storage_classes".to_string(), "static|export|extern|friend|explicit|virtual|register|thread_local".to_string());
    v.insert("before_tag".to_string(), "struct|union|enum\\s+class|enum\\s+struct|enum|class".to_string());
    v.insert("regular".to_string(), "[^(){}&;*^%=<>-]*".to_string());
    v.insert("generic_open".to_string(), "(?:{{regular_plus}}(?:<".to_string());
    v.insert("type_qualifier".to_string(), "const|constexpr|mutable|typename|volatile".to_string());
    v.insert("operator_keywords".to_string(), "and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|xor|xor_eq|noexcept".to_string());
    v
  },
  contexts: {
    let mut v = std::collections::HashMap::new();
    v.insert("#anon_types-parens_0".to_string(), ContextId { index: 3699 });
    v.insert("objc-structures".to_string(), ContextId { index: 3770 });
    v.insert("#anon_global_0".to_string(), ContextId { index: 3620 });
    v.insert("function-definition-continue".to_string(), ContextId { index: 3737 });
    v.insert("function-trailing-return-type-parens".to_string(), ContextId { index: 3741 });
    v.insert("#anon_method_2".to_string(), ContextId { index: 3645 });
    v.insert("modifiers".to_string(), ContextId { index: 3764 });
    v.insert("comments".to_string(), ContextId { index: 3708 });
    v.insert("#anon_preprocessor-rule-disabled-objc-structures_2".to_string(), ContextId { index: 3677 });
    v.insert("#anon_preprocessor-rule-enabled-statements_1".to_string(), ContextId { index: 3691 });
    v.insert("data-structures-definition-common-end".to_string(), ContextId { index: 3715 });
    v.insert("#anon_parens_0".to_string(), ContextId { index: 3658 });
    v.insert("preprocessor-rule-other-statements".to_string(), ContextId { index: 3804 });
    v.insert("data-structures-function-identifier".to_string(), ContextId { index: 3718 });
    v.insert("#anon_data-structures-modifier-friend_0".to_string(), ContextId { index: 3586 });
    v.insert("preprocessor-if-branch-statements".to_string(), ContextId { index: 3788 });
    v.insert("generic-type".to_string(), ContextId { index: 3742 });
    v.insert("method-definition-continue".to_string(), ContextId { index: 3761 });
    v.insert("function-call".to_string(), ContextId { index: 3735 });
    v.insert("#anon_preprocessor-rule-disabled-global_0".to_string(), ContextId { index: 3672 });
    v.insert("#anon_method-definition-continue_0".to_string(), ContextId { index: 3635 });
    v.insert("#anon_method-definition-continue_2".to_string(), ContextId { index: 3637 });
    v.insert("negated-block".to_string(), ContextId { index: 3767 });
    v.insert("#anon_generic-type_2".to_string(), ContextId { index: 3606 });
    v.insert("bracketed-content".to_string(), ContextId { index: 3705 });
    v.insert("#anon_preprocessor-other-include-common_0".to_string(), ContextId { index: 3663 });
    v.insert("block".to_string(), ContextId { index: 3704 });
    v.insert("#anon_data-structures-class-definition-after-identifier_0".to_string(), ContextId { index: 3578 });
    v.insert("variables".to_string(), ContextId { index: 3816 });
    v.insert("#anon_modifiers-parens_3".to_string(), ContextId { index: 3651 });
    v.insert("#anon_data-structures-struct-definition-after-identifier_0".to_string(), ContextId { index: 3591 });
    v.insert("#anon_data-structures-modifier_2".to_string(), ContextId { index: 3589 });
    v.insert("#anon_generic-type_4".to_string(), ContextId { index: 3608 });
    v.insert("#anon_data-structures-struct-definition_0".to_string(), ContextId { index: 3592 });
    v.insert("#anon_preprocessor-rule-disabled-objc-structures_0".to_string(), ContextId { index: 3675 });
    v.insert("#anon_preprocessor-rule-other-statements_0".to_string(), ContextId { index: 3694 });
    v.insert("#anon_preprocessor-rule-disabled-objc-structures_1".to_string(), ContextId { index: 3676 });
    v.insert("data-structures-modifier".to_string(), ContextId { index: 3721 });
    v.insert("preprocessor-block-finish-global".to_string(), ContextId { index: 3773 });
    v.insert("#anon_generic-type_0".to_string(), ContextId { index: 3604 });
    v.insert("#anon_namespace_1".to_string(), ContextId { index: 3653 });
    v.insert("#anon_preprocessor-other_0".to_string(), ContextId { index: 3665 });
    v.insert("main".to_string(), ContextId { index: 3754 });
    v.insert("preprocessor-macro-definition".to_string(), ContextId { index: 3790 });
    v.insert("template".to_string(), ContextId { index: 3809 });
    v.insert("#anon_template_0".to_string(), ContextId { index: 3695 });
    v.insert("data-structures-modifier-friend".to_string(), ContextId { index: 3722 });
    v.insert("preprocessor-global".to_string(), ContextId { index: 3783 });
    v.insert("keywords".to_string(), ContextId { index: 3749 });
    v.insert("#anon_keywords-angle-brackets_1".to_string(), ContextId { index: 3627 });
    v.insert("preprocessor-rule-disabled-objc-structures".to_string(), ContextId { index: 3797 });
    v.insert("#anon_function-call_0".to_string(), ContextId { index: 3596 });
    v.insert("#anon_function-definition-params_0".to_string(), ContextId { index: 3600 });
    v.insert("#anon_global_3".to_string(), ContextId { index: 3623 });
    v.insert("#anon_global_2".to_string(), ContextId { index: 3622 });
    v.insert("early-expressions".to_string(), ContextId { index: 3728 });
    v.insert("preprocessor-expressions".to_string(), ContextId { index: 3782 });
    v.insert("#anon_modifiers-parens_0".to_string(), ContextId { index: 3648 });
    v.insert("#anon_generic-type_5".to_string(), ContextId { index: 3609 });
    v.insert("data-structures-definition-common-begin".to_string(), ContextId { index: 3714 });
    v.insert("preprocessor-block-if-branch-statements".to_string(), ContextId { index: 3778 });
    v.insert("#anon_bracketed-content_1".to_string(), ContextId { index: 3573 });
    v.insert("#anon_function-definition-params_2".to_string(), ContextId { index: 3602 });
    v.insert("function-definition-body".to_string(), ContextId { index: 3736 });
    v.insert("template-common".to_string(), ContextId { index: 3810 });
    v.insert("#anon_data-structures-maybe-method_0".to_string(), ContextId { index: 3585 });
    v.insert("#anon_negated-block_0".to_string(), ContextId { index: 3655 });
    v.insert("preprocessor-objc-structures".to_string(), ContextId { index: 3792 });
    v.insert("#anon_preprocessor-rule-disabled-statements_1".to_string(), ContextId { index: 3679 });
    v.insert("#anon_namespace_2".to_string(), ContextId { index: 3654 });
    v.insert("#anon_angle-brackets_0".to_string(), ContextId { index: 3570 });
    v.insert("__start".to_string(), ContextId { index: 3702 });
    v.insert("data-structures-struct-definition".to_string(), ContextId { index: 3723 });
    v.insert("#anon_generic-type_6".to_string(), ContextId { index: 3610 });
    v.insert("#anon_method_4".to_string(), ContextId { index: 3647 });
    v.insert("#anon_method-definition-continue_4".to_string(), ContextId { index: 3639 });
    v.insert("#anon_data-structures-definition-common-end_0".to_string(), ContextId { index: 3580 });
    v.insert("global-modifier".to_string(), ContextId { index: 3747 });
    v.insert("#anon_preprocessor-rule-enabled-objc-structures_2".to_string(), ContextId { index: 3689 });
    v.insert("preprocessor-block-finish-if-branch-global".to_string(), ContextId { index: 3774 });
    v.insert("#anon_data-structures-modifier_3".to_string(), ContextId { index: 3590 });
    v.insert("early-expressions-after-generic-type".to_string(), ContextId { index: 3729 });
    v.insert("#anon_preprocessor-rule-enabled-data-structures_1".to_string(), ContextId { index: 3682 });
    v.insert("#anon_preprocessor-rule-enabled-data-structures_0".to_string(), ContextId { index: 3681 });
    v.insert("modifiers-parens".to_string(), ContextId { index: 3765 });
    v.insert("preprocessor-if-branch-global".to_string(), ContextId { index: 3787 });
    v.insert("#anon_preprocessor-rule-disabled-statements_0".to_string(), ContextId { index: 3678 });
    v.insert("preprocessor-rule-disabled-statements".to_string(), ContextId { index: 3798 });
    v.insert("preprocessor-data-structures".to_string(), ContextId { index: 3779 });
    v.insert("#anon_preprocessor-rule-enabled-data-structures_2".to_string(), ContextId { index: 3683 });
    v.insert("preprocessor-if-branch-function-call".to_string(), ContextId { index: 3784 });
    v.insert("#anon_method-definition-continue_3".to_string(), ContextId { index: 3638 });
    v.insert("constants".to_string(), ContextId { index: 3709 });
    v.insert("preprocessor-workaround-eat-macro-before-identifier".to_string(), ContextId { index: 3806 });
    v.insert("preprocessor-block-if-branch-global".to_string(), ContextId { index: 3777 });
    v.insert("#anon_global-modifier_0".to_string(), ContextId { index: 3614 });
    v.insert("#anon_data-structures-enum-definition-after-identifier_0".to_string(), ContextId { index: 3582 });
    v.insert("#anon_generic-type_1".to_string(), ContextId { index: 3605 });
    v.insert("__main".to_string(), ContextId { index: 3701 });
    v.insert("#anon_data-structures-definition-common-end_1".to_string(), ContextId { index: 3581 });
    v.insert("#anon_preprocessor-rule-enabled-global_2".to_string(), ContextId { index: 3686 });
    v.insert("data-structures-union-definition".to_string(), ContextId { index: 3726 });
    v.insert("#anon_preprocessor-macro-definition_0".to_string(), ContextId { index: 3661 });
    v.insert("#anon_members-after-accessor-junction_0".to_string(), ContextId { index: 3629 });
    v.insert("#anon_preprocessor-rule-enabled-objc-structures_1".to_string(), ContextId { index: 3688 });
    v.insert("#anon_preprocessor-rule-enabled-global_1".to_string(), ContextId { index: 3685 });
    v.insert("data-structures-body".to_string(), ContextId { index: 3711 });
    v.insert("preprocessor-if-branch-function-call-arguments".to_string(), ContextId { index: 3785 });
    v.insert("preprocessor-other-include-common".to_string(), ContextId { index: 3794 });
    v.insert("#anon_preprocessor-other-include-common_1".to_string(), ContextId { index: 3664 });
    v.insert("#anon_global-type_0".to_string(), ContextId { index: 3617 });
    v.insert("data-structures-union-definition-after-identifier".to_string(), ContextId { index: 3727 });
    v.insert("function-definition-params".to_string(), ContextId { index: 3738 });
    v.insert("#anon_preprocessor-rule-disabled-data-structures_1".to_string(), ContextId { index: 3670 });
    v.insert("data-structures-class-definition".to_string(), ContextId { index: 3712 });
    v.insert("preprocessor-macro-params".to_string(), ContextId { index: 3791 });
    v.insert("#anon_keywords-parens_0".to_string(), ContextId { index: 3628 });
    v.insert("#anon_objc-structures_0".to_string(), ContextId { index: 3656 });
    v.insert("parens".to_string(), ContextId { index: 3772 });
    v.insert("#anon_modifiers-parens_1".to_string(), ContextId { index: 3649 });
    v.insert("global-maybe-function".to_string(), ContextId { index: 3746 });
    v.insert("expressions-minus-generic-type-function-call".to_string(), ContextId { index: 3734 });
    v.insert("#anon_modifiers-parens_2".to_string(), ContextId { index: 3650 });
    v.insert("preprocessor-rule-other-global".to_string(), ContextId { index: 3803 });
    v.insert("#anon_generic-type_7".to_string(), ContextId { index: 3611 });
    v.insert("angle-brackets".to_string(), ContextId { index: 3703 });
    v.insert("data-structures-enum-definition-after-identifier".to_string(), ContextId { index: 3717 });
    v.insert("#anon_data-structures-type_0".to_string(), ContextId { index: 3593 });
    v.insert("data-structures-class-definition-after-identifier".to_string(), ContextId { index: 3713 });
    v.insert("preprocessor-rule-enabled-global".to_string(), ContextId { index: 3800 });
    v.insert("#anon_preprocessor-rule-disabled-global_1".to_string(), ContextId { index: 3673 });
    v.insert("method-definition-body".to_string(), ContextId { index: 3760 });
    v.insert("#anon_members-after-accessor-junction_2".to_string(), ContextId { index: 3631 });
    v.insert("#anon_global_4".to_string(), ContextId { index: 3624 });
    v.insert("#anon_preprocessor-other_2".to_string(), ContextId { index: 3667 });
    v.insert("case-default".to_string(), ContextId { index: 3707 });
    v.insert("#anon_function-call_2".to_string(), ContextId { index: 3598 });
    v.insert("#anon_preprocessor-other_3".to_string(), ContextId { index: 3668 });
    v.insert("#anon_bracketed-content_0".to_string(), ContextId { index: 3572 });
    v.insert("#anon_method_0".to_string(), ContextId { index: 3643 });
    v.insert("preprocessor-rule-enabled-objc-structures".to_string(), ContextId { index: 3801 });
    v.insert("expressions-minus-generic-type".to_string(), ContextId { index: 3733 });
    v.insert("#anon_function-trailing-return-type-parens_0".to_string(), ContextId { index: 3603 });
    v.insert("#anon_preprocessor-rule-disabled-data-structures_2".to_string(), ContextId { index: 3671 });
    v.insert("method".to_string(), ContextId { index: 3759 });
    v.insert("#anon_method-definition-params_0".to_string(), ContextId { index: 3640 });
    v.insert("#anon_generic-type_3".to_string(), ContextId { index: 3607 });
    v.insert("#anon_preprocessor-rule-other-global_0".to_string(), ContextId { index: 3693 });
    v.insert("#anon_block_0".to_string(), ContextId { index: 3571 });
    v.insert("#anon_template_2".to_string(), ContextId { index: 3697 });
    v.insert("objc-structure-body".to_string(), ContextId { index: 3769 });
    v.insert("using-namespace".to_string(), ContextId { index: 3815 });
    v.insert("preprocessor-block-finish-statements".to_string(), ContextId { index: 3776 });
    v.insert("members-dot".to_string(), ContextId { index: 3757 });
    v.insert("#anon_bracketed-content_2".to_string(), ContextId { index: 3574 });
    v.insert("data-structures-struct-definition-after-identifier".to_string(), ContextId { index: 3724 });
    v.insert("operators".to_string(), ContextId { index: 3771 });
    v.insert("global".to_string(), ContextId { index: 3743 });
    v.insert("data-structures-function-identifier-generic".to_string(), ContextId { index: 3719 });
    v.insert("#anon_data-structures-union-definition_0".to_string(), ContextId { index: 3595 });
    v.insert("global-function-identifier-generic".to_string(), ContextId { index: 3745 });
    v.insert("#anon_preprocessor-rule-disabled-statements_2".to_string(), ContextId { index: 3680 });
    v.insert("#anon_members-after-accessor-junction_1".to_string(), ContextId { index: 3630 });
    v.insert("#anon_preprocessor-rule-disabled-data-structures_0".to_string(), ContextId { index: 3669 });
    v.insert("#anon_method_3".to_string(), ContextId { index: 3646 });
    v.insert("#anon_global-type_1".to_string(), ContextId { index: 3618 });
    v.insert("types".to_string(), ContextId { index: 3812 });
    v.insert("data-structures".to_string(), ContextId { index: 3710 });
    v.insert("#anon_data-structures-class-definition_0".to_string(), ContextId { index: 3579 });
    v.insert("preprocessor-rule-enabled-data-structures".to_string(), ContextId { index: 3799 });
    v.insert("preprocessor-other".to_string(), ContextId { index: 3793 });
    v.insert("preprocessor-rule-enabled-statements".to_string(), ContextId { index: 3802 });
    v.insert("method-definition-params".to_string(), ContextId { index: 3762 });
    v.insert("#anon_preprocessor-macro-define_1".to_string(), ContextId { index: 3660 });
    v.insert("#anon_data-structures-modifier_1".to_string(), ContextId { index: 3588 });
    v.insert("#anon_data-structures-union-definition-after-identifier_0".to_string(), ContextId { index: 3594 });
    v.insert("#anon_global-modifier_2".to_string(), ContextId { index: 3616 });
    v.insert("#anon_case-default_0".to_string(), ContextId { index: 3576 });
    v.insert("preprocessor-block-finish-if-branch-statements".to_string(), ContextId { index: 3775 });
    v.insert("members-arrow".to_string(), ContextId { index: 3756 });
    v.insert("expressions-minus-function-call".to_string(), ContextId { index: 3732 });
    v.insert("#anon_method-definition-params_2".to_string(), ContextId { index: 3642 });
    v.insert("preprocessor-statements".to_string(), ContextId { index: 3805 });
    v.insert("function-trailing-return-type".to_string(), ContextId { index: 3740 });
    v.insert("statements".to_string(), ContextId { index: 3807 });
    v.insert("global-function-identifier".to_string(), ContextId { index: 3744 });
    v.insert("data-structures-maybe-method".to_string(), ContextId { index: 3720 });
    v.insert("expressions".to_string(), ContextId { index: 3731 });
    v.insert("members-after-accessor-junction".to_string(), ContextId { index: 3755 });
    v.insert("#anon_global_5".to_string(), ContextId { index: 3625 });
    v.insert("preprocessor-elif-else-branch-global".to_string(), ContextId { index: 3780 });
    v.insert("preprocessor-rule-disabled-global".to_string(), ContextId { index: 3796 });
    v.insert("#anon_function-definition-params_1".to_string(), ContextId { index: 3601 });
    v.insert("#anon_members-after-accessor-junction_3".to_string(), ContextId { index: 3632 });
    v.insert("#anon_method-definition-body_0".to_string(), ContextId { index: 3634 });
    v.insert("strings".to_string(), ContextId { index: 3808 });
    v.insert("#anon_namespace_0".to_string(), ContextId { index: 3652 });
    v.insert("#anon_global-modifier_1".to_string(), ContextId { index: 3615 });
    v.insert("#anon_preprocessor-rule-enabled-global_0".to_string(), ContextId { index: 3684 });
    v.insert("function-definition-trailing-return".to_string(), ContextId { index: 3739 });
    v.insert("data-structures-type".to_string(), ContextId { index: 3725 });
    v.insert("method-definition-trailing-return".to_string(), ContextId { index: 3763 });
    v.insert("namespace".to_string(), ContextId { index: 3766 });
    v.insert("numbers".to_string(), ContextId { index: 3768 });
    v.insert("#anon_preprocessor-rule-enabled-statements_0".to_string(), ContextId { index: 3690 });
    v.insert("using-alias".to_string(), ContextId { index: 3814 });
    v.insert("#anon_global-maybe-function_0".to_string(), ContextId { index: 3612 });
    v.insert("#anon_global-maybe-function_1".to_string(), ContextId { index: 3613 });
    v.insert("data-structures-enum-definition".to_string(), ContextId { index: 3716 });
    v.insert("#anon_preprocessor-rule-enabled-objc-structures_0".to_string(), ContextId { index: 3687 });
    v.insert("#anon_typedef_0".to_string(), ContextId { index: 3698 });
    v.insert("#anon_using-namespace_0".to_string(), ContextId { index: 3700 });
    v.insert("typedef".to_string(), ContextId { index: 3811 });
    v.insert("#anon_method_1".to_string(), ContextId { index: 3644 });
    v.insert("preprocessor-rule-disabled-data-structures".to_string(), ContextId { index: 3795 });
    v.insert("#anon_preprocessor-rule-enabled-statements_2".to_string(), ContextId { index: 3692 });
    v.insert("late-expressions-before-function-call".to_string(), ContextId { index: 3753 });
    v.insert("#anon_global-type_2".to_string(), ContextId { index: 3619 });
    v.insert("early-expressions-before-generic-type".to_string(), ContextId { index: 3730 });
    v.insert("#anon_keywords-angle-brackets_0".to_string(), ContextId { index: 3626 });
    v.insert("#anon_preprocessor-other_1".to_string(), ContextId { index: 3666 });
    v.insert("#anon_objc-structures_1".to_string(), ContextId { index: 3657 });
    v.insert("#anon_preprocessor-macro-define_0".to_string(), ContextId { index: 3659 });
    v.insert("#anon_method-definition-continue_1".to_string(), ContextId { index: 3636 });
    v.insert("#anon_brackets_0".to_string(), ContextId { index: 3575 });
    v.insert("#anon_preprocessor-rule-disabled-global_2".to_string(), ContextId { index: 3674 });
    v.insert("types-parens".to_string(), ContextId { index: 3813 });
    v.insert("members-inside-function-call".to_string(), ContextId { index: 3758 });
    v.insert("preprocessor-if-branch-function-call-arguments-finish".to_string(), ContextId { index: 3786 });
    v.insert("brackets".to_string(), ContextId { index: 3706 });
    v.insert("#anon_data-structures-modifier_0".to_string(), ContextId { index: 3587 });
    v.insert("#anon_data-structures-body_0".to_string(), ContextId { index: 3577 });
    v.insert("#anon_function-definition-body_0".to_string(), ContextId { index: 3599 });
    v.insert("#anon_members-after-accessor-junction_4".to_string(), ContextId { index: 3633 });
    v.insert("#anon_data-structures-function-identifier-generic_0".to_string(), ContextId { index: 3584 });
    v.insert("#anon_preprocessor-macro-params_0".to_string(), ContextId { index: 3662 });
    v.insert("global-type".to_string(), ContextId { index: 3748 });
    v.insert("#anon_data-structures-enum-definition_0".to_string(), ContextId { index: 3583 });
    v.insert("keywords-parens".to_string(), ContextId { index: 3751 });
    v.insert("preprocessor-macro-define".to_string(), ContextId { index: 3789 });
    v.insert("#anon_template_1".to_string(), ContextId { index: 3696 });
    v.insert("late-expressions".to_string(), ContextId { index: 3752 });
    v.insert("preprocessor-elif-else-branch-statements".to_string(), ContextId { index: 3781 });
    v.insert("keywords-angle-brackets".to_string(), ContextId { index: 3750 });
    v.insert("#anon_function-call_1".to_string(), ContextId { index: 3597 });
    v.insert("#anon_global_1".to_string(), ContextId { index: 3621 });
    v.insert("#anon_method-definition-params_1".to_string(), ContextId { index: 3641 });
    v
  }
} }