
#![allow(unused_imports)]
#![allow(dead_code)]

use jirs_syntect::{*, parsing::*};
use lazycell::AtomicLazyCell;

#[inline(always)]
pub fn load() -> SyntaxReference {
        SyntaxReference {  name: "JavaScript".to_string(),
  file_extensions: vec!["js".to_string(),"htc".to_string()],
  scope: Scope { a: 844609613725696, b: 0 },
  first_line_match: Some("^#!\\s*/.*\\b(node|js)\\b".to_string()),
  hidden: false,
  variables: {
    let mut v = std::collections::HashMap::new();
    v.insert("class_element_name".to_string(), "(?x:\n  \\*?\n  {{property_name}}\n  | \\#{{identifier}}\n)".to_string());
    v.insert("identifier_part".to_string(), "(?:[_$\\p{L}\\p{Nl}\\p{Mn}\\p{Mc}\\p{Nd}\\p{Pc}\\x{200C}\\x{200D}]|{{identifier_escape}})".to_string());
    v.insert("identifier".to_string(), "(?:{{identifier_start}}{{identifier_part}}*{{identifier_break}})".to_string());
    v.insert("non_reserved_identifier".to_string(), "(?:(?!{{reserved_word}}){{identifier}})".to_string());
    v.insert("func_lookahead".to_string(), "(?x:\n  \\s*\n  (?:async{{identifier_break}}{{nothing}})?\n  function{{identifier_break}}\n)".to_string());
    v.insert("oct_digit".to_string(), "[0-7_]".to_string());
    v.insert("identifier_escape".to_string(), "(?:\\\\u(?:\\h{4}|\\{\\h+\\}))".to_string());
    v.insert("dollar_only_identifier".to_string(), "(?:\\${{identifier_break}})".to_string());
    v.insert("either_func_lookahead".to_string(), "(?:{{func_lookahead}}|{{arrow_func_lookahead}})".to_string());
    v.insert("dec_exponent".to_string(), "(?:[Ee](?:[-+]|(?![-+])){{dec_digit}}*)".to_string());
    v.insert("line_ending_ahead".to_string(), "(?={{nothing}}(?:/\\*{{block_comment_contents}})?$)".to_string());
    v.insert("nothing".to_string(), "(?x:(?:\\s+|{{block_comment}})*)".to_string());
    v.insert("identifier_break".to_string(), "(?!{{identifier_part}})".to_string());
    v.insert("left_expression_end_lookahead".to_string(), "(?!\\s*[.\\[\\(])".to_string());
    v.insert("reserved_word".to_string(), "(?x:\n  break|case|catch|class|const|continue|debugger|default|delete|do|else|\n  export|extends|finally|for|function|if|import|in|instanceof|new|return|\n  super|switch|this|throw|try|typeof|var|void|while|with|yield|\n  enum|\n  null|true|false\n){{identifier_break}}".to_string());
    v.insert("dec_integer".to_string(), "(?:0|[1-9]{{dec_digit}}*)".to_string());
    v.insert("binding_pattern_lookahead".to_string(), "(?:{{identifier}}|\\[|\\{)".to_string());
    v.insert("block_comment".to_string(), "(?:/\\*{{block_comment_contents}}\\*/)".to_string());
    v.insert("bin_digit".to_string(), "[01_]".to_string());
    v.insert("dot_accessor".to_string(), "(?x: # Match . and .?, but not .?( or .?[\n  \\.\n  (?! \\? [\\[(] )\n  \\??\n)".to_string());
    v.insert("constant_identifier".to_string(), "(?:[[:upper:]]{{identifier_part}}*{{identifier_break}})".to_string());
    v.insert("identifier_start".to_string(), "(?:[_$\\p{L}\\p{Nl}]|{{identifier_escape}})".to_string());
    v.insert("block_comment_contents".to_string(), "(?:(?:[^*]|\\*(?!/))*)".to_string());
    v.insert("dec_digit".to_string(), "[0-9_]".to_string());
    v.insert("arrow_func_lookahead".to_string(), "(?x:\n  \\s*\n  (?:async\\s*)?\n  (?:\n    {{identifier}}\n    | \\( ( [^()] | \\( [^()]* \\) )* \\)\n  )\n  \\s*\n  =>\n)".to_string());
    v.insert("method_lookahead".to_string(), "(?x:(?=\n  (?: get|set|async ){{identifier_break}}(?!\\s*:)\n  | \\*\n  | {{property_name}} \\s* \\(\n))".to_string());
    v.insert("property_name".to_string(), "(?x:\n  {{identifier}}\n  | \'(?:[^\\\\\']|\\\\.)*\'\n  | \"(?:[^\\\\\"]|\\\\.)*\"\n  | \\[ .* \\]\n)".to_string());
    v.insert("dollar_identifier".to_string(), "(?:(\\$){{identifier_part}}*{{identifier_break}})".to_string());
    v.insert("hex_digit".to_string(), "[\\h_]".to_string());
    v.insert("line_continuation_lookahead".to_string(), "(?x:(?=\n  \\s*\n  (?! \\+\\+ | -- )\n  (?=\n    != |\n    [-+*/%><=&|^\\[(;,.:?] |\n    (?:in|instanceof){{identifier_break}}\n  )\n))".to_string());
    v
  },
  contexts: {
    let mut v = std::collections::HashMap::new();
    v.insert("#anon_support-variable-ecma_13".to_string(), ContextId { index: 2482 });
    v.insert("function-parameter-binding-object-key".to_string(), ContextId { index: 2620 });
    v.insert("immediately-pop".to_string(), ContextId { index: 2623 });
    v.insert("import-item".to_string(), ContextId { index: 2629 });
    v.insert("binary-operators".to_string(), ContextId { index: 2525 });
    v.insert("class-extends".to_string(), ContextId { index: 2539 });
    v.insert("for-await".to_string(), ContextId { index: 2588 });
    v.insert("support-property-ecma".to_string(), ContextId { index: 2673 });
    v.insert("prefix-operators".to_string(), ContextId { index: 2662 });
    v.insert("for-condition-contents".to_string(), ContextId { index: 2590 });
    v.insert("else-pop".to_string(), ContextId { index: 2564 });
    v.insert("function-declaration-identifiers".to_string(), ContextId { index: 2605 });
    v.insert("#anon_support-variable-ecma_8".to_string(), ContextId { index: 2505 });
    v.insert("object-literal-meta-key".to_string(), ContextId { index: 2655 });
    v.insert("regexp-complete".to_string(), ContextId { index: 2666 });
    v.insert("#anon_function-declaration-parameters_0".to_string(), ContextId { index: 2454 });
    v.insert("class-body".to_string(), ContextId { index: 2537 });
    v.insert("expression-break".to_string(), ContextId { index: 2577 });
    v.insert("expression-begin".to_string(), ContextId { index: 2576 });
    v.insert("#anon_support-variable-ecma_21".to_string(), ContextId { index: 2491 });
    v.insert("#anon_variable-binding-object-destructuring_0".to_string(), ContextId { index: 2514 });
    v.insert("expect-parenthesized-expression".to_string(), ContextId { index: 2568 });
    v.insert("#anon_import-export_0".to_string(), ContextId { index: 2459 });
    v.insert("for-condition".to_string(), ContextId { index: 2589 });
    v.insert("literal-string".to_string(), ContextId { index: 2643 });
    v.insert("statement".to_string(), ContextId { index: 2668 });
    v.insert("support-property-ecma-typedarray".to_string(), ContextId { index: 2688 });
    v.insert("#anon_for-condition-contents_0".to_string(), ContextId { index: 2450 });
    v.insert("#anon_support-variable-node_2".to_string(), ContextId { index: 2509 });
    v.insert("#anon_support-variable-ecma_5".to_string(), ContextId { index: 2502 });
    v.insert("#anon_support-variable-ecma_7".to_string(), ContextId { index: 2504 });
    v.insert("import-meta-expression".to_string(), ContextId { index: 2632 });
    v.insert("class-meta".to_string(), ContextId { index: 2542 });
    v.insert("#anon_literal-string_1".to_string(), ContextId { index: 2465 });
    v.insert("#anon_support-variable-ecma_28".to_string(), ContextId { index: 2498 });
    v.insert("class-body-contents".to_string(), ContextId { index: 2538 });
    v.insert("support-property-ecma-atomics".to_string(), ContextId { index: 2676 });
    v.insert("function-block".to_string(), ContextId { index: 2596 });
    v.insert("support-property-ecma-date".to_string(), ContextId { index: 2678 });
    v.insert("function-meta".to_string(), ContextId { index: 2611 });
    v.insert("support-property-ecma-promise".to_string(), ContextId { index: 2683 });
    v.insert("arrow-function-expect-arrow".to_string(), ContextId { index: 2520 });
    v.insert("#anon_new-target_0".to_string(), ContextId { index: 2468 });
    v.insert("expression-list".to_string(), ContextId { index: 2581 });
    v.insert("function-or-class-declaration".to_string(), ContextId { index: 2614 });
    v.insert("#anon_support-variable-ecma_23".to_string(), ContextId { index: 2493 });
    v.insert("arrow-function-expect-body".to_string(), ContextId { index: 2521 });
    v.insert("#anon_support-variable-ecma_2".to_string(), ContextId { index: 2489 });
    v.insert("parens1".to_string(), ContextId { index: 2658 });
    v.insert("decorator".to_string(), ContextId { index: 2556 });
    v.insert("yield-expression".to_string(), ContextId { index: 2715 });
    v.insert("comments".to_string(), ContextId { index: 2545 });
    v.insert("#anon_support-variable-ecma_27".to_string(), ContextId { index: 2497 });
    v.insert("new-target".to_string(), ContextId { index: 2651 });
    v.insert("#anon_support-variable-ecma_0".to_string(), ContextId { index: 2477 });
    v.insert("comma-separator".to_string(), ContextId { index: 2544 });
    v.insert("function-declaration-expect-function-keyword".to_string(), ContextId { index: 2601 });
    v.insert("string-content".to_string(), ContextId { index: 2670 });
    v.insert("#anon_support-variable-ecma_9".to_string(), ContextId { index: 2506 });
    v.insert("import-export-alias".to_string(), ContextId { index: 2626 });
    v.insert("support-property-node-module".to_string(), ContextId { index: 2689 });
    v.insert("function-declaration-expect-parameters".to_string(), ContextId { index: 2604 });
    v.insert("postfix-operators".to_string(), ContextId { index: 2661 });
    v.insert("#anon_support-variable-ecma_15".to_string(), ContextId { index: 2484 });
    v.insert("ternary-operator-expect-colon".to_string(), ContextId { index: 2700 });
    v.insert("#anon_for-condition-contents_1".to_string(), ContextId { index: 2451 });
    v.insert("#anon_block_0".to_string(), ContextId { index: 2437 });
    v.insert("function-parameter-binding-spread".to_string(), ContextId { index: 2622 });
    v.insert("#anon_support-variable-ecma_1".to_string(), ContextId { index: 2478 });
    v.insert("field-initializer-or-method-declaration".to_string(), ContextId { index: 2585 });
    v.insert("#anon_field-name_1".to_string(), ContextId { index: 2449 });
    v.insert("support-variable-ecma".to_string(), ContextId { index: 2693 });
    v.insert("block".to_string(), ContextId { index: 2526 });
    v.insert("function-declaration-meta".to_string(), ContextId { index: 2607 });
    v.insert("function-declaration-parameters".to_string(), ContextId { index: 2609 });
    v.insert("inherited-class-expression-end".to_string(), ContextId { index: 2635 });
    v.insert("#anon_parenthesized-expression_0".to_string(), ContextId { index: 2471 });
    v.insert("function-declaration-expect-async".to_string(), ContextId { index: 2599 });
    v.insert("#anon_variable-binding-array-destructuring_0".to_string(), ContextId { index: 2511 });
    v.insert("#anon_support-variable-ecma_18".to_string(), ContextId { index: 2487 });
    v.insert("#anon_support-variable-node_3".to_string(), ContextId { index: 2510 });
    v.insert("export-list".to_string(), ContextId { index: 2573 });
    v.insert("#anon_decorator-expression-end_0".to_string(), ContextId { index: 2444 });
    v.insert("#anon_support-variable-ecma_22".to_string(), ContextId { index: 2492 });
    v.insert("for-oldstyle-rest".to_string(), ContextId { index: 2594 });
    v.insert("variable-binding-list-top".to_string(), ContextId { index: 2704 });
    v.insert("expression-end-no-in".to_string(), ContextId { index: 2580 });
    v.insert("comments-top-level".to_string(), ContextId { index: 2546 });
    v.insert("finally-meta".to_string(), ContextId { index: 2587 });
    v.insert("function-parameter-binding-array-destructuring".to_string(), ContextId { index: 2615 });
    v.insert("conditional-meta".to_string(), ContextId { index: 2549 });
    v.insert("arrow-function-expect-parameters".to_string(), ContextId { index: 2522 });
    v.insert("#anon_function-block_0".to_string(), ContextId { index: 2452 });
    v.insert("#anon_import-export-alias_0".to_string(), ContextId { index: 2458 });
    v.insert("do-while-meta".to_string(), ContextId { index: 2562 });
    v.insert("function-declaration-expect-generator-star".to_string(), ContextId { index: 2602 });
    v.insert("support-property-ecma-proxy".to_string(), ContextId { index: 2684 });
    v.insert("support-property-ecma-symbol".to_string(), ContextId { index: 2687 });
    v.insert("export-meta".to_string(), ContextId { index: 2574 });
    v.insert("call-function-meta".to_string(), ContextId { index: 2530 });
    v.insert("#anon_computed-property-name_0".to_string(), ContextId { index: 2441 });
    v.insert("expect-semicolon".to_string(), ContextId { index: 2569 });
    v.insert("support-property-ecma-reflect".to_string(), ContextId { index: 2685 });
    v.insert("switch-block-contents".to_string(), ContextId { index: 2696 });
    v.insert("object-literal-contents".to_string(), ContextId { index: 2653 });
    v.insert("#anon_method-name_1".to_string(), ContextId { index: 2467 });
    v.insert("expect-case-colon".to_string(), ContextId { index: 2565 });
    v.insert("export-item".to_string(), ContextId { index: 2572 });
    v.insert("import-export-from".to_string(), ContextId { index: 2627 });
    v.insert("bare-property-name".to_string(), ContextId { index: 2524 });
    v.insert("#anon_support-variable-console_0".to_string(), ContextId { index: 2476 });
    v.insert("function-parameter-binding-object-destructuring".to_string(), ContextId { index: 2619 });
    v.insert("decorator-name".to_string(), ContextId { index: 2560 });
    v.insert("#anon_support-variable-ecma_19".to_string(), ContextId { index: 2488 });
    v.insert("expect-label".to_string(), ContextId { index: 2567 });
    v.insert("expression-end".to_string(), ContextId { index: 2578 });
    v.insert("constructor-body-expect-class-end".to_string(), ContextId { index: 2554 });
    v.insert("support-property-node-process".to_string(), ContextId { index: 2690 });
    v.insert("class-field-rest".to_string(), ContextId { index: 2541 });
    v.insert("function-declaration".to_string(), ContextId { index: 2598 });
    v.insert("#anon_support-variable-ecma_20".to_string(), ContextId { index: 2490 });
    v.insert("call-method-meta".to_string(), ContextId { index: 2532 });
    v.insert("#anon_support-variable-ecma_26".to_string(), ContextId { index: 2496 });
    v.insert("__start".to_string(), ContextId { index: 2517 });
    v.insert("ternary-operator".to_string(), ContextId { index: 2699 });
    v.insert("#anon_property-access_0".to_string(), ContextId { index: 2472 });
    v.insert("inherited-class-expression-begin".to_string(), ContextId { index: 2634 });
    v.insert("__main".to_string(), ContextId { index: 2516 });
    v.insert("support-property-ecma-math".to_string(), ContextId { index: 2680 });
    v.insert("#anon_literal-string-template_1".to_string(), ContextId { index: 2463 });
    v.insert("support".to_string(), ContextId { index: 2671 });
    v.insert("variable-binding-top".to_string(), ContextId { index: 2711 });
    v.insert("#anon_export-extended_0".to_string(), ContextId { index: 2446 });
    v.insert("#anon_inherited-class-expression-end_0".to_string(), ContextId { index: 2461 });
    v.insert("#anon_comments_2".to_string(), ContextId { index: 2440 });
    v.insert("#anon_literal-string-template_0".to_string(), ContextId { index: 2462 });
    v.insert("call-function-name".to_string(), ContextId { index: 2531 });
    v.insert("expression-no-comma".to_string(), ContextId { index: 2582 });
    v.insert("await-expression".to_string(), ContextId { index: 2523 });
    v.insert("#anon_property-access_1".to_string(), ContextId { index: 2473 });
    v.insert("block-meta".to_string(), ContextId { index: 2527 });
    v.insert("expression-statement-end".to_string(), ContextId { index: 2584 });
    v.insert("function-declaration-expect-name".to_string(), ContextId { index: 2603 });
    v.insert("inherited-class-name".to_string(), ContextId { index: 2636 });
    v.insert("support-property-ecma-number".to_string(), ContextId { index: 2681 });
    v.insert("variable-binding-object-alias".to_string(), ContextId { index: 2706 });
    v.insert("computed-property-name".to_string(), ContextId { index: 2547 });
    v.insert("variable-binding-spread".to_string(), ContextId { index: 2710 });
    v.insert("parens2".to_string(), ContextId { index: 2659 });
    v.insert("function-parameter-binding-pattern".to_string(), ContextId { index: 2621 });
    v.insert("statements".to_string(), ContextId { index: 2669 });
    v.insert("literal-variable".to_string(), ContextId { index: 2645 });
    v.insert("#anon_support-variable-ecma_4".to_string(), ContextId { index: 2501 });
    v.insert("#anon_field-name_0".to_string(), ContextId { index: 2448 });
    v.insert("import-list".to_string(), ContextId { index: 2630 });
    v.insert("support-property-ecma-object".to_string(), ContextId { index: 2682 });
    v.insert("variable-declaration".to_string(), ContextId { index: 2712 });
    v.insert("#anon_constructor_0".to_string(), ContextId { index: 2443 });
    v.insert("expression-statement".to_string(), ContextId { index: 2583 });
    v.insert("#anon_support-variable-ecma_17".to_string(), ContextId { index: 2486 });
    v.insert("#anon_array-literal_0".to_string(), ContextId { index: 2436 });
    v.insert("function-call-arguments".to_string(), ContextId { index: 2597 });
    v.insert("#anon_expression-statement-end_0".to_string(), ContextId { index: 2447 });
    v.insert("either-function-declaration".to_string(), ContextId { index: 2563 });
    v.insert("do-while-condition".to_string(), ContextId { index: 2561 });
    v.insert("expression-end-no-comma".to_string(), ContextId { index: 2579 });
    v.insert("parenthesized-expression".to_string(), ContextId { index: 2660 });
    v.insert("#anon_parens1_1".to_string(), ContextId { index: 2470 });
    v.insert("property-access".to_string(), ContextId { index: 2663 });
    v.insert("switch-block".to_string(), ContextId { index: 2695 });
    v.insert("expect-dot-accessor".to_string(), ContextId { index: 2566 });
    v.insert("function-parameter-binding-object-alias".to_string(), ContextId { index: 2618 });
    v.insert("#anon_regexp_1".to_string(), ContextId { index: 2475 });
    v.insert("#anon_support-variable-node_0".to_string(), ContextId { index: 2507 });
    v.insert("with-meta".to_string(), ContextId { index: 2714 });
    v.insert("function-parameter-binding-list".to_string(), ContextId { index: 2616 });
    v.insert("constructor-meta".to_string(), ContextId { index: 2555 });
    v.insert("switch-meta".to_string(), ContextId { index: 2697 });
    v.insert("#anon_support-variable-ecma_10".to_string(), ContextId { index: 2479 });
    v.insert("#anon_support-variable-ecma_16".to_string(), ContextId { index: 2485 });
    v.insert("import-meta".to_string(), ContextId { index: 2631 });
    v.insert("decorator-expression-begin".to_string(), ContextId { index: 2557 });
    v.insert("import-brace".to_string(), ContextId { index: 2624 });
    v.insert("function-initializer".to_string(), ContextId { index: 2610 });
    v.insert("decorator-meta".to_string(), ContextId { index: 2559 });
    v.insert("#anon_function-parameter-binding-array-destructuring_0".to_string(), ContextId { index: 2456 });
    v.insert("import-export".to_string(), ContextId { index: 2625 });
    v.insert("#anon_comments_0".to_string(), ContextId { index: 2438 });
    v.insert("support-property-ecma-bigint".to_string(), ContextId { index: 2677 });
    v.insert("conditional".to_string(), ContextId { index: 2548 });
    v.insert("support-variable-node".to_string(), ContextId { index: 2694 });
    v.insert("variable-binding-object-destructuring".to_string(), ContextId { index: 2707 });
    v.insert("support-variable-dom".to_string(), ContextId { index: 2692 });
    v.insert("literal-number".to_string(), ContextId { index: 2642 });
    v.insert("object-literal".to_string(), ContextId { index: 2652 });
    v.insert("constructor-body-expect-arguments".to_string(), ContextId { index: 2552 });
    v.insert("export-brace".to_string(), ContextId { index: 2570 });
    v.insert("call-method-name".to_string(), ContextId { index: 2533 });
    v.insert("import-string-or-items".to_string(), ContextId { index: 2633 });
    v.insert("for-meta".to_string(), ContextId { index: 2592 });
    v.insert("method-declaration".to_string(), ContextId { index: 2648 });
    v.insert("regexp".to_string(), ContextId { index: 2665 });
    v.insert("#anon_support-variable-ecma_14".to_string(), ContextId { index: 2483 });
    v.insert("#anon_support-variable-ecma_29".to_string(), ContextId { index: 2499 });
    v.insert("class-field".to_string(), ContextId { index: 2540 });
    v.insert("#anon_parens1_0".to_string(), ContextId { index: 2469 });
    v.insert("main".to_string(), ContextId { index: 2647 });
    v.insert("#anon_support-variable-ecma_12".to_string(), ContextId { index: 2481 });
    v.insert("#anon_method-name_0".to_string(), ContextId { index: 2466 });
    v.insert("#anon_support-variable-ecma_24".to_string(), ContextId { index: 2494 });
    v.insert("literal-variable-base".to_string(), ContextId { index: 2646 });
    v.insert("object-literal-expect-colon".to_string(), ContextId { index: 2654 });
    v.insert("try-meta".to_string(), ContextId { index: 2701 });
    v.insert("function-declaration-identifiers-expect-class".to_string(), ContextId { index: 2606 });
    v.insert("#anon_variable-binding-name_0".to_string(), ContextId { index: 2513 });
    v.insert("support-variable-console".to_string(), ContextId { index: 2691 });
    v.insert("catch-meta".to_string(), ContextId { index: 2535 });
    v.insert("export-extended".to_string(), ContextId { index: 2571 });
    v.insert("#anon_support-variable-ecma_3".to_string(), ContextId { index: 2500 });
    v.insert("#anon_comments_1".to_string(), ContextId { index: 2439 });
    v.insert("for-condition-end".to_string(), ContextId { index: 2591 });
    v.insert("variable-binding-name".to_string(), ContextId { index: 2705 });
    v.insert("#anon_support-variable-node_1".to_string(), ContextId { index: 2508 });
    v.insert("builtin-console-properties".to_string(), ContextId { index: 2529 });
    v.insert("call-path".to_string(), ContextId { index: 2534 });
    v.insert("#anon_import-expression-end_0".to_string(), ContextId { index: 2460 });
    v.insert("block-scope".to_string(), ContextId { index: 2528 });
    v.insert("import-expression-end".to_string(), ContextId { index: 2628 });
    v.insert("#anon_function-initializer_0".to_string(), ContextId { index: 2455 });
    v.insert("label".to_string(), ContextId { index: 2638 });
    v.insert("function-name-meta".to_string(), ContextId { index: 2613 });
    v.insert("object-property-base".to_string(), ContextId { index: 2657 });
    v.insert("tagged-template".to_string(), ContextId { index: 2698 });
    v.insert("support-property-ecma-array".to_string(), ContextId { index: 2674 });
    v.insert("variable-binding-array-destructuring".to_string(), ContextId { index: 2702 });
    v.insert("variable-binding-pattern".to_string(), ContextId { index: 2709 });
    v.insert("constructor-body-expect-class-begin".to_string(), ContextId { index: 2553 });
    v.insert("restricted-production".to_string(), ContextId { index: 2667 });
    v.insert("support-property".to_string(), ContextId { index: 2672 });
    v.insert("literal-call".to_string(), ContextId { index: 2641 });
    v.insert("object-property".to_string(), ContextId { index: 2656 });
    v.insert("function-declaration-meta-no-clear".to_string(), ContextId { index: 2608 });
    v.insert("#anon_support-variable-ecma_25".to_string(), ContextId { index: 2495 });
    v.insert("field-name".to_string(), ContextId { index: 2586 });
    v.insert("arrow-function-declaration".to_string(), ContextId { index: 2519 });
    v.insert("language-identifiers".to_string(), ContextId { index: 2639 });
    v.insert("decorator-expression-end".to_string(), ContextId { index: 2558 });
    v.insert("function-parameter-binding-name".to_string(), ContextId { index: 2617 });
    v.insert("class".to_string(), ContextId { index: 2536 });
    v.insert("prototype".to_string(), ContextId { index: 2664 });
    v.insert("support-property-ecma-arraybuffer".to_string(), ContextId { index: 2675 });
    v.insert("function-assignment".to_string(), ContextId { index: 2595 });
    v.insert("#anon_function-parameter-binding-object-destructuring_0".to_string(), ContextId { index: 2457 });
    v.insert("#anon_function-call-arguments_0".to_string(), ContextId { index: 2453 });
    v.insert("left-expression-end".to_string(), ContextId { index: 2640 });
    v.insert("while-meta".to_string(), ContextId { index: 2713 });
    v.insert("variable-binding-list".to_string(), ContextId { index: 2703 });
    v.insert("function-meta-parens".to_string(), ContextId { index: 2612 });
    v.insert("#anon_regexp_0".to_string(), ContextId { index: 2474 });
    v.insert("method-declaration-expect-prefix".to_string(), ContextId { index: 2649 });
    v.insert("#anon_variable-binding-list-top_0".to_string(), ContextId { index: 2512 });
    v.insert("method-name".to_string(), ContextId { index: 2650 });
    v.insert("array-literal".to_string(), ContextId { index: 2518 });
    v.insert("class-name".to_string(), ContextId { index: 2543 });
    v.insert("#anon_yield-expression_0".to_string(), ContextId { index: 2515 });
    v.insert("expression".to_string(), ContextId { index: 2575 });
    v.insert("constants".to_string(), ContextId { index: 2550 });
    v.insert("literal-string-template".to_string(), ContextId { index: 2644 });
    v.insert("for-of-rest".to_string(), ContextId { index: 2593 });
    v.insert("#anon_constructor-body-expect-class-begin_0".to_string(), ContextId { index: 2442 });
    v.insert("constructor".to_string(), ContextId { index: 2551 });
    v.insert("function-declaration-expect-body".to_string(), ContextId { index: 2600 });
    v.insert("#anon_support-variable-ecma_11".to_string(), ContextId { index: 2480 });
    v.insert("#anon_expect-label_0".to_string(), ContextId { index: 2445 });
    v.insert("#anon_literal-string_0".to_string(), ContextId { index: 2464 });
    v.insert("initializer".to_string(), ContextId { index: 2637 });
    v.insert("support-property-ecma-string".to_string(), ContextId { index: 2686 });
    v.insert("support-property-ecma-json".to_string(), ContextId { index: 2679 });
    v.insert("variable-binding-object-key".to_string(), ContextId { index: 2708 });
    v.insert("#anon_support-variable-ecma_6".to_string(), ContextId { index: 2503 });
    v
  }
} }